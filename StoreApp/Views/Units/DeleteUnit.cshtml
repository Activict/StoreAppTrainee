@model StoreApp.Models.Unit.UnitViewModel

@{
    ViewBag.Title = "Delete unit";
}

<h3>Delete @Model.Name</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (ViewBag.CountProducts == 0)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Delete" class="btn btn-danger" />
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                If you wont to delete @Model.Name you must to delete @ViewBag.CountProducts product(s)
            </div>
        </div>
    }
</div>
}

<div>
    @Html.ActionLink("Back to units", "Index")
</div>
